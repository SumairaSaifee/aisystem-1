name: Deploy Project

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    container:
      image: node:20

    steps:
      - uses: actions/checkout@v3

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --retry=5 --fetch-retries=5

      - name: Build project
        run: npm run build

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Install rsync   # ðŸ‘ˆ separate step
        run: apt-get update && apt-get install -y rsync

      - name: Sync project files to server
        run: rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/id_rsa" ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/node-app

      - name: Create .env file on server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cat > ~/node-app/.env <<EOL
          MYSQLHOST=${{ secrets.MYSQLHOST }}
          MYSQLUSER=${{ secrets.MYSQLUSER }}
          MYSQLPORT=${{ secrets.MYSQLPORT }}
          MYSQLPASSWORD=${{ secrets.MYSQLPASSWORD }}
          MYSQLDATABASE=${{ secrets.MYSQLDATABASE }}
          PORT=${{ secrets.PORT }}
          EOL"



      - name: Restart Server
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/node-app && npm install && pm2 restart node-app || pm2 start server.js --name node-app"
